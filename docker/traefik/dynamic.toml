[http.routers.traefik]
service = "api@internal"
rule = "Host(`traefik.internal.sawyer.services`)"
[http.routers.traefik.tls]
certResolver = "cloudflare"

[http.routers.homenas]
service = "komodo"
rule = "Host(`homenas.internal.sawyer.services`)"
[http.routers.homenas.tls]
certResolver = "cloudflare"

[http.services.homenas.loadBalancer]
[[http.services.homenas.loadBalancer.servers]]
url = "https://homenas/cgi-bin/"

[http.routers.komodo]
service = "komodo"
rule = "Host(`komodo.internal.sawyer.services`)"
[http.routers.komodo.tls]
certResolver = "cloudflare"

[http.services.komodo.loadBalancer]
[[http.services.komodo.loadBalancer.servers]]
url = "http://komodo-core:9120"

[http.routers.ollama]
service = "ollama"
rule = "Host(`ollama.internal.sawyer.services`)"
[http.routers.ollama.tls]
certResolver = "cloudflare"

[http.services.ollama.loadBalancer]
[[http.services.ollama.loadBalancer.servers]]
url = "http://ollama:8080"

[http.routers.jellyfin]
service = "jellyfin"
rule = "Host(`jellyfin.sawyer.services`)"
[http.routers.jellyfin.tls]
certResolver = "cloudflare"

[http.services.jellyfin.loadBalancer]
[[http.services.jellyfin.loadBalancer.servers]]
url = "http://jellyfin:8096"

[http.routers.transmission]
service = "transmission"
rule = "Host(`transmission.internal.sawyer.services`) || Host(`torrent.internal.sawyer.services`)"
[http.routers.transmission.tls]
certResolver = "cloudflare"

[http.services.transmission.loadBalancer]
[[http.services.transmission.loadBalancer.servers]]
url = "http://transmission-openvpn:9091"

[http.routers.portfolio]
service = "portfolio"
rule = "Host(`sawyer.services`) || Host(`portfolio.sawyer.services`)"
[http.routers.portfolio.tls]
certResolver = "cloudflare"

[http.services.portfolio.loadBalancer]
[[http.services.portfolio.loadBalancer.servers]]
url = "http://portfolio:8000"

[http.routers.mom-contact]
service = "mom-contact"
rule = "Host(`casey.sawyer.services`)"
[http.routers.mom-contact.tls]
certResolver = "cloudflare"

[http.services.mom-contact.loadBalancer]
[[http.services.mom-contact.loadBalancer.servers]]
url = "http://mom-contact:8000"

[http.routers.searxng]
service = "searxng"
rule = "Host(`searxng.sawyer.services`) || Host(`search.sawyer.services`)"
[http.routers.searxng.tls]
certResolver = "cloudflare"

[http.services.searxng.loadBalancer]
[[http.services.searxng.loadBalancer.servers]]
url = "http://searxng:8080"

[http.routers.smokeping]
service = "smokeping"
rule = "Host(`smokeping.internal.sawyer.services`)"
[http.routers.smokeping.tls]
certResolver = "cloudflare"

[http.services.smokeping.loadBalancer]
[[http.services.smokeping.loadBalancer.servers]]
url = "http://smokeping:80"

[http.routers.pterodactyl]
service = "pterodactyl"
rule = "Host(`pterodactyl.sawyer.services`)"
[http.routers.pterodactyl.tls]
certResolver = "cloudflare"

[http.services.pterodactyl.loadBalancer]
[[http.services.pterodactyl.loadBalancer.servers]]
url = "http://pterodactyl:80"

[http.routers.languagetool]
service = "languagetool"
rule = "Host(`languagetool.sawyer.services`)"
[http.routers.languagetool.tls]
certResolver = "cloudflare"

[http.services.languagetool.loadBalancer]
[[http.services.languagetool.loadBalancer.servers]]
url = "http://languagetool:8010"

[http.routers.uptime-kuma]
service = "uptime-kuma"
rule = "Host(`uptime-kuma.internal.sawyer.services`)"
[http.routers.uptime-kuma.tls]
certResolver = "cloudflare"

[http.services.uptime-kuma.loadBalancer]
[[http.services.uptime-kuma.loadBalancer.servers]]
url = "http://uptime-kuma:3001"

[http.routers.adguard]
service = "adguard"
rule = "Host(`adguard.internal.sawyer.services`) || Host(`adguardhome.internal.sawyer.services`)"
[http.routers.adguard.tls]
certResolver = "cloudflare"

[http.services.adguard.loadBalancer]
[[http.services.adguard.loadBalancer.servers]]
url = "http://adguardhome:80"

[http.routers.doh]
service = "doh"
rule = "Host(`dns.sawyer.services`)"
[http.routers.doh.tls]
certResolver = "cloudflare"

[http.services.doh.loadBalancer]
[[http.services.doh.loadBalancer.servers]]
url = "https://adguardhome:443"

# not terminating tls and instead pass directly to adguard
[tcp.routers.dot]
entryPoints = ["dot"]
service = "dot"
rule = "HostSNI(`*`)"

[tcp.services.dot.loadBalancer]
[[tcp.services.dot.loadBalancer.servers]]
address = "172.55.0.10:853"
