[http.routers.traefik]
service = "api@ts"
rule = "Host(`traefik.ts.sawyer.services`)"
[http.routers.traefik.tls]
certResolver = "cloudflare"

[http.routers.homenas]
service = "homenas"
rule = "Host(`homenas.ts.sawyer.services`)"
[http.routers.homenas.tls]
certResolver = "cloudflare"
[http.services.homenas.loadBalancer]
[[http.services.homenas.loadBalancer.servers]]
url = "https://homenas/"

[http.routers.grafana]
service = "grafana"
rule = "Host(`grafana.ts.sawyer.services`)"
[http.routers.grafana.tls]
certResolver = "cloudflare"
[http.services.grafana.loadBalancer]
[[http.services.grafana.loadBalancer.servers]]
url = "http://grafana:3000"

[http.routers.ollama]
service = "ollama"
rule = "Host(`ollama.ts.sawyer.services`)"
[http.routers.ollama.tls]
certResolver = "cloudflare"
[http.services.ollama.loadBalancer]
[[http.services.ollama.loadBalancer.servers]]
url = "http://ollama:8080"

[http.routers.ollama-api]
service = "ollama-api"
rule = "Host(`ollama-api.ts.sawyer.services`)"
[http.routers.ollama-api.tls]
certResolver = "cloudflare"
[http.services.ollama-api.loadBalancer]
[[http.services.ollama-api.loadBalancer.servers]]
url = "http://ollama:11434"

[http.routers.tdarr]
service = "tdarr"
rule = "Host(`tdarr.ts.sawyer.services`)"
[http.routers.tdarr.tls]
certResolver = "cloudflare"
[http.services.tdarr.loadBalancer]
[[http.services.tdarr.loadBalancer.servers]]
url = "http://tdarr:8265"

[http.routers.transmission]
service = "transmission"
rule = "Host(`transmission.ts.sawyer.services`) || Host(`torrent.ts.sawyer.services`)"
[http.routers.transmission.tls]
certResolver = "cloudflare"
[http.services.transmission.loadBalancer]
[[http.services.transmission.loadBalancer.servers]]
url = "http://gluetun:9091"

[http.routers.jackett]
service = "jackett"
rule = "Host(`jackett.ts.sawyer.services`)"
[http.routers.jackett.tls]
certResolver = "cloudflare"
[http.services.jackett.loadBalancer]
[[http.services.jackett.loadBalancer.servers]]
url = "http://jackett:9117"

[http.routers.prowlarr]
service = "prowlarr"
rule = "Host(`prowlarr.ts.sawyer.services`)"
[http.routers.prowlarr.tls]
certResolver = "cloudflare"
[http.services.prowlarr.loadBalancer]
[[http.services.prowlarr.loadBalancer.servers]]
url = "http://prowlarr:9696"

[http.routers.sonarr]
service = "sonarr"
rule = "Host(`sonarr.ts.sawyer.services`)"
[http.routers.sonarr.tls]
certResolver = "cloudflare"
[http.services.sonarr.loadBalancer]
[[http.services.sonarr.loadBalancer.servers]]
url = "http://sonarr:8989"

[http.routers.speakarr]
service = "speakarr"
rule = "Host(`speakarr.ts.sawyer.services`)"
[http.routers.speakarr.tls]
certResolver = "cloudflare"
[http.services.speakarr.loadBalancer]
[[http.services.speakarr.loadBalancer.servers]]
url = "http://speakarr:8787"

[http.routers.readarr]
service = "readarr"
rule = "Host(`readarr.ts.sawyer.services`)"
[http.routers.readarr.tls]
certResolver = "cloudflare"
[http.services.readarr.loadBalancer]
[[http.services.readarr.loadBalancer.servers]]
url = "http://readarr:8787"

[http.routers.lidarr]
service = "lidarr"
rule = "Host(`lidarr.ts.sawyer.services`)"
[http.routers.lidarr.tls]
certResolver = "cloudflare"
[http.services.lidarr.loadBalancer]
[[http.services.lidarr.loadBalancer.servers]]
url = "http://lidarr:8686"

[http.routers.radarr]
service = "radarr"
rule = "Host(`radarr.ts.sawyer.services`)"
[http.routers.radarr.tls]
certResolver = "cloudflare"
[http.services.radarr.loadBalancer]
[[http.services.radarr.loadBalancer.servers]]
url = "http://radarr:7878"

[http.routers.huntarr]
service = "huntarr"
rule = "Host(`huntarr.ts.sawyer.services`)"
[http.routers.huntarr.tls]
certResolver = "cloudflare"
[http.services.huntarr.loadBalancer]
[[http.services.huntarr.loadBalancer.servers]]
url = "http://huntarr:9705"

[http.routers.lidatube]
service = "lidatube"
rule = "Host(`lidatube.ts.sawyer.services`)"
[http.routers.lidatube.tls]
certResolver = "cloudflare"
[http.services.lidatube.loadBalancer]
[[http.services.lidatube.loadBalancer.servers]]
url = "http://lidatube:5000"

[http.routers.smokeping]
service = "smokeping"
rule = "Host(`smokeping.ts.sawyer.services`)"
[http.routers.smokeping.tls]
certResolver = "cloudflare"
[http.services.smokeping.loadBalancer]
[[http.services.smokeping.loadBalancer.servers]]
url = "http://smokeping:80"

[http.routers.uptime-kuma]
service = "uptime-kuma"
rule = "Host(`uptime-kuma.ts.sawyer.services`)"
[http.routers.uptime-kuma.tls]
certResolver = "cloudflare"
[http.services.uptime-kuma.loadBalancer]
[[http.services.uptime-kuma.loadBalancer.servers]]
url = "http://uptime-kuma:3001"

[http.routers.jellyfin]
service = "jellyfin"
rule = "Host(`jellyfin.sawyer.services`)"
[http.routers.jellyfin.tls]
certResolver = "cloudflare"
[http.services.jellyfin.loadBalancer]
[[http.services.jellyfin.loadBalancer.servers]]
url = "http://jellyfin:8096"

[http.routers.audiobookshelf]
service = "audiobookshelf"
rule = "Host(`audiobookshelf.sawyer.services`)"
[http.routers.audiobookshelf.tls]
certResolver = "cloudflare"
[http.services.audiobookshelf.loadBalancer]
[[http.services.audiobookshelf.loadBalancer.servers]]
url = "http://audiobookshelf:80"

[http.routers.calibre]
service = "calibre"
rule = "Host(`calibre.ts.sawyer.services`)"
[http.routers.calibre.tls]
certResolver = "cloudflare"
[http.services.calibre.loadBalancer]
[[http.services.calibre.loadBalancer.servers]]
url = "http://calibre:8080"

[http.routers.calibre-server]
service = "calibre-server"
rule = "Host(`calibre.sawyer.services`)"
[http.routers.calibre-server.tls]
certResolver = "cloudflare"
[http.services.calibre-server.loadBalancer]
[[http.services.calibre-server.loadBalancer.servers]]
url = "http://calibre:8081"

[http.routers.calibre-web]
service = "calibre-web"
rule = "Host(`calibre-web.sawyer.services`)"
[http.routers.calibre-web.tls]
certResolver = "cloudflare"
[http.services.calibre-web.loadBalancer]
[[http.services.calibre-web.loadBalancer.servers]]
url = "http://calibre-web:8083"

[http.routers.portfolio]
service = "portfolio"
rule = "Host(`sawyer.services`) || Host(`portfolio.sawyer.services`)"
[http.routers.portfolio.tls]
certResolver = "cloudflare"
[http.services.portfolio.loadBalancer]
[[http.services.portfolio.loadBalancer.servers]]
url = "http://portfolio:8000"

[http.routers.mom-contact]
service = "mom-contact"
rule = "Host(`casey.sawyer.services`)"
[http.routers.mom-contact.tls]
certResolver = "cloudflare"
[http.services.mom-contact.loadBalancer]
[[http.services.mom-contact.loadBalancer.servers]]
url = "http://mom-contact:8000"

[http.routers.unduck]
service = "unduck"
rule = "Host(`unduck.sawyer.services`)"
[http.routers.unduck.tls]
certResolver = "cloudflare"
[http.services.unduck.loadBalancer]
[[http.services.unduck.loadBalancer.servers]]
url = "http://unduck:3000"

[http.routers.searxng]
service = "searxng"
rule = "Host(`searxng.sawyer.services`) || Host(`search.sawyer.services`)"
[http.routers.searxng.tls]
certResolver = "cloudflare"
[http.services.searxng.loadBalancer]
[[http.services.searxng.loadBalancer.servers]]
url = "http://searxng:8080"

[http.routers.languagetool]
service = "languagetool"
rule = "Host(`languagetool.sawyer.services`)"
[http.routers.languagetool.tls]
certResolver = "cloudflare"
[http.services.languagetool.loadBalancer]
[[http.services.languagetool.loadBalancer.servers]]
url = "http://languagetool:8010"

[http.routers.adguard]
service = "adguard"
rule = "Host(`adguard.ts.sawyer.services`) || Host(`adguardhome.ts.sawyer.services`)"
[http.routers.adguard.tls]
certResolver = "cloudflare"
[http.services.adguard.loadBalancer]
[[http.services.adguard.loadBalancer.servers]]
url = "http://adguardhome:80"

[http.routers.doh]
service = "doh"
rule = "Host(`dns.sawyer.services`)"
[http.routers.doh.tls]
certResolver = "cloudflare"
[http.services.doh.loadBalancer]
[[http.services.doh.loadBalancer.servers]]
url = "https://adguardhome:443"

# not terminating tls and instead pass directly to adguard
[tcp.routers.dot]
entryPoints = ["dot"]
service = "dot"
rule = "HostSNI(`*`)"
[tcp.services.dot.loadBalancer]
[[tcp.services.dot.loadBalancer.servers]]
address = "172.55.0.10:853"
