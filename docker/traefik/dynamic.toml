[http.middlewares]
[http.middlewares.tailscale-allowlist.IPAllowList]
sourceRange = ["100.64.0.0/10"]

[http.routers.traefik]
entryPoints = ["websecure"]
service = "api@internal"
rule = "Host(`traefik.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.routers.traefik.tls]
certResolver = "cloudflare"

[http.routers.homenas]
entryPoints = ["websecure"]
service = "homenas"
rule = "Host(`homenas.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.homenas.loadBalancer]
[[http.services.homenas.loadBalancer.servers]]
url = "https://homenas/"

[http.routers.prometheus]
entryPoints = ["websecure"]
service = "prometheus"
rule = "Host(`prometheus.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.prometheus.loadBalancer]
[[http.services.prometheus.loadBalancer.servers]]
url = "http://prometheus:9090"

[http.routers.grafana]
entryPoints = ["websecure"]
service = "grafana"
rule = "Host(`grafana.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.grafana.loadBalancer]
[[http.services.grafana.loadBalancer.servers]]
url = "http://grafana:3000"

[http.routers.fileflows]
entryPoints = ["websecure"]
service = "fileflows"
rule = "Host(`fileflows.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.fileflows.loadBalancer]
[[http.services.fileflows.loadBalancer.servers]]
url = "http://fileflows:5000"

[http.routers.transmission]
entryPoints = ["websecure"]
service = "transmission"
rule = "Host(`transmission.ts.sawyer.services`) || Host(`torrent.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.transmission.loadBalancer]
[[http.services.transmission.loadBalancer.servers]]
url = "http://gluetun:9091"

[http.routers.jackett]
entryPoints = ["websecure"]
service = "jackett"
rule = "Host(`jackett.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.jackett.loadBalancer]
[[http.services.jackett.loadBalancer.servers]]
url = "http://jackett:9117"

[http.routers.prowlarr]
entryPoints = ["websecure"]
service = "prowlarr"
rule = "Host(`prowlarr.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.prowlarr.loadBalancer]
[[http.services.prowlarr.loadBalancer.servers]]
url = "http://prowlarr:9696"

[http.routers.sonarr]
entryPoints = ["websecure"]
service = "sonarr"
rule = "Host(`sonarr.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.sonarr.loadBalancer]
[[http.services.sonarr.loadBalancer.servers]]
url = "http://sonarr:8989"

[http.routers.speakarr]
entryPoints = ["websecure"]
service = "speakarr"
rule = "Host(`speakarr.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.speakarr.loadBalancer]
[[http.services.speakarr.loadBalancer.servers]]
url = "http://speakarr:8787"

[http.routers.readarr]
entryPoints = ["websecure"]
service = "readarr"
rule = "Host(`readarr.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.readarr.loadBalancer]
[[http.services.readarr.loadBalancer.servers]]
url = "http://readarr:8787"

[http.routers.lidarr]
entryPoints = ["websecure"]
service = "lidarr"
rule = "Host(`lidarr.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.lidarr.loadBalancer]
[[http.services.lidarr.loadBalancer.servers]]
url = "http://lidarr:8686"

[http.routers.radarr]
entryPoints = ["websecure"]
service = "radarr"
rule = "Host(`radarr.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.radarr.loadBalancer]
[[http.services.radarr.loadBalancer.servers]]
url = "http://radarr:7878"

[http.routers.huntarr]
entryPoints = ["websecure"]
service = "huntarr"
rule = "Host(`huntarr.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.huntarr.loadBalancer]
[[http.services.huntarr.loadBalancer.servers]]
url = "http://huntarr:9705"

[http.routers.smokeping]
entryPoints = ["websecure"]
service = "smokeping"
rule = "Host(`smokeping.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.smokeping.loadBalancer]
[[http.services.smokeping.loadBalancer.servers]]
url = "http://smokeping:80"

[http.routers.uptime-kuma]
entryPoints = ["websecure"]
service = "uptime-kuma"
rule = "Host(`uptime-kuma.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.uptime-kuma.loadBalancer]
[[http.services.uptime-kuma.loadBalancer.servers]]
url = "http://uptime-kuma:3001"

[http.routers.jellyfin]
entryPoints = ["websecure"]
service = "jellyfin"
rule = "Host(`jellyfin.sawyer.services`)"
[http.routers.jellyfin.tls]
certResolver = "cloudflare"
[http.services.jellyfin.loadBalancer]
[[http.services.jellyfin.loadBalancer.servers]]
url = "http://jellyfin:8096"

[http.routers.audiobookshelf]
entryPoints = ["websecure"]
service = "audiobookshelf"
rule = "Host(`audiobookshelf.sawyer.services`)"
[http.routers.audiobookshelf.tls]
certResolver = "cloudflare"
[http.services.audiobookshelf.loadBalancer]
[[http.services.audiobookshelf.loadBalancer.servers]]
url = "http://audiobookshelf:80"

[http.routers.calibre]
entryPoints = ["websecure"]
service = "calibre"
rule = "Host(`calibre.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.calibre.loadBalancer]
[[http.services.calibre.loadBalancer.servers]]
url = "http://calibre:8080"

[http.routers.calibre-server]
entryPoints = ["websecure"]
service = "calibre-server"
rule = "Host(`calibre.sawyer.services`)"
[http.routers.calibre-server.tls]
certResolver = "cloudflare"
[http.services.calibre-server.loadBalancer]
[[http.services.calibre-server.loadBalancer.servers]]
url = "http://calibre:8081"

[http.routers.calibre-web]
entryPoints = ["websecure"]
service = "calibre-web"
rule = "Host(`calibre-web.sawyer.services`)"
[http.routers.calibre-web.tls]
certResolver = "cloudflare"
[http.services.calibre-web.loadBalancer]
[[http.services.calibre-web.loadBalancer.servers]]
url = "http://calibre-web:8083"

[http.routers.portfolio]
entryPoints = ["websecure"]
service = "portfolio"
rule = "Host(`sawyer.services`) || Host(`portfolio.sawyer.services`)"
[http.routers.portfolio.tls]
certResolver = "cloudflare"
[http.services.portfolio.loadBalancer]
[[http.services.portfolio.loadBalancer.servers]]
url = "http://portfolio:8000"

[http.routers.mom-contact]
service = "mom-contact"
rule = "Host(`casey.sawyer.services`)"
[http.routers.mom-contact.tls]
certResolver = "cloudflare"
[http.services.mom-contact.loadBalancer]
[[http.services.mom-contact.loadBalancer.servers]]
url = "http://mom-contact:8000"

[http.routers.gitea]
entryPoints = ["websecure"]
service = "gitea"
rule = "Host(`gitea.sawyer.services`)"
[http.routers.gitea.tls]
certResolver = "cloudflare"
[http.services.gitea.loadBalancer]
[[http.services.gitea.loadBalancer.servers]]
url = "http://gitea:3000"

[http.routers.unduck]
entryPoints = ["websecure"]
service = "unduck"
rule = "Host(`unduck.sawyer.services`)"
[http.routers.unduck.tls]
certResolver = "cloudflare"
[http.services.unduck.loadBalancer]
[[http.services.unduck.loadBalancer.servers]]
url = "http://unduck:3000"

[http.routers.searxng]
entryPoints = ["websecure"]
service = "searxng"
rule = "Host(`searxng.sawyer.services`) || Host(`search.sawyer.services`)"
[http.routers.searxng.tls]
certResolver = "cloudflare"
[http.services.searxng.loadBalancer]
[[http.services.searxng.loadBalancer.servers]]
url = "http://searxng:8080"

[http.routers.languagetool]
entryPoints = ["websecure"]
service = "languagetool"
rule = "Host(`languagetool.sawyer.services`)"
[http.routers.languagetool.tls]
certResolver = "cloudflare"
[http.services.languagetool.loadBalancer]
[[http.services.languagetool.loadBalancer.servers]]
url = "http://languagetool:8081"

[http.routers.adguard]
entryPoints = ["websecure"]
service = "adguard"
rule = "Host(`adguard.ts.sawyer.services`) || Host(`adguardhome.ts.sawyer.services`)"
middlewares = ["tailscale-allowlist"]
[http.services.adguard.loadBalancer]
[[http.services.adguard.loadBalancer.servers]]
url = "http://adguardhome:80"

[http.routers.doh]
entryPoints = ["websecure"]
service = "doh"
rule = "Host(`dns.sawyer.services`)"
[http.routers.doh.tls]
certResolver = "cloudflare"
[http.services.doh.loadBalancer]
[[http.services.doh.loadBalancer.servers]]
url = "https://adguardhome:443"

# not terminating tls and instead pass directly to adguard
[tcp.routers.dot]
entryPoints = ["dot"]
service = "dot"
rule = "HostSNI(`*`)"
[tcp.services.dot.loadBalancer]
[[tcp.services.dot.loadBalancer.servers]]
address = "172.55.0.10:853"
